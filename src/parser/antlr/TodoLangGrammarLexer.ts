// Generated from TodoLangGrammar.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TodoLangGrammarLexer extends Lexer {
	public static readonly PI = 1;
	public static readonly QINIT_KEY = 2;
	public static readonly CREG_KEY = 3;
	public static readonly Q_KEY = 4;
	public static readonly C_KEY = 5;
	public static readonly BARRIER_KEY = 6;
	public static readonly QGATE_KEY = 7;
	public static readonly ENDQGATE_KEY = 8;
	public static readonly ECHO_GATE = 9;
	public static readonly H_GATE = 10;
	public static readonly X_GATE = 11;
	public static readonly NOT_GATE = 12;
	public static readonly T_GATE = 13;
	public static readonly S_GATE = 14;
	public static readonly Y_GATE = 15;
	public static readonly Z_GATE = 16;
	public static readonly X1_GATE = 17;
	public static readonly Y1_GATE = 18;
	public static readonly Z1_GATE = 19;
	public static readonly I_GATE = 20;
	public static readonly U2_GATE = 21;
	public static readonly RPHI_GATE = 22;
	public static readonly U3_GATE = 23;
	public static readonly U4_GATE = 24;
	public static readonly RX_GATE = 25;
	public static readonly RY_GATE = 26;
	public static readonly RZ_GATE = 27;
	public static readonly U1_GATE = 28;
	public static readonly CNOT_GATE = 29;
	public static readonly CZ_GATE = 30;
	public static readonly CU_GATE = 31;
	public static readonly ISWAP_GATE = 32;
	public static readonly SQISWAP_GATE = 33;
	public static readonly SWAPZ1_GATE = 34;
	public static readonly ISWAPTHETA_GATE = 35;
	public static readonly CR_GATE = 36;
	public static readonly TOFFOLI_GATE = 37;
	public static readonly CP_GATE = 38;
	public static readonly DAGGER_KEY = 39;
	public static readonly ENDDAGGER_KEY = 40;
	public static readonly CONTROL_KEY = 41;
	public static readonly ENDCONTROL_KEY = 42;
	public static readonly QIF_KEY = 43;
	public static readonly ELSE_KEY = 44;
	public static readonly ENDIF_KEY = 45;
	public static readonly QWHILE_KEY = 46;
	public static readonly ENDQWHILE_KEY = 47;
	public static readonly MEASURE_KEY = 48;
	public static readonly RESET_KEY = 49;
	public static readonly ASSIGN = 50;
	public static readonly GT = 51;
	public static readonly LT = 52;
	public static readonly NOT = 53;
	public static readonly EQ = 54;
	public static readonly LEQ = 55;
	public static readonly GEQ = 56;
	public static readonly NE = 57;
	public static readonly AND = 58;
	public static readonly OR = 59;
	public static readonly PLUS = 60;
	public static readonly MINUS = 61;
	public static readonly MUL = 62;
	public static readonly DIV = 63;
	public static readonly COMMA = 64;
	public static readonly LPAREN = 65;
	public static readonly RPAREN = 66;
	public static readonly LBRACK = 67;
	public static readonly RBRACK = 68;
	public static readonly NEWLINE = 69;
	public static readonly Identifier = 70;
	public static readonly Integer_Literal = 71;
	public static readonly Double_Literal = 72;
	public static readonly Digit_Sequence = 73;
	public static readonly REALEXP = 74;
	public static readonly WhiteSpace = 75;
	public static readonly SingleLineComment = 76;
	public static readonly WS = 77;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"PI", "QINIT_KEY", "CREG_KEY", "Q_KEY", "C_KEY", "BARRIER_KEY", "QGATE_KEY", 
		"ENDQGATE_KEY", "ECHO_GATE", "H_GATE", "X_GATE", "NOT_GATE", "T_GATE", 
		"S_GATE", "Y_GATE", "Z_GATE", "X1_GATE", "Y1_GATE", "Z1_GATE", "I_GATE", 
		"U2_GATE", "RPHI_GATE", "U3_GATE", "U4_GATE", "RX_GATE", "RY_GATE", "RZ_GATE", 
		"U1_GATE", "CNOT_GATE", "CZ_GATE", "CU_GATE", "ISWAP_GATE", "SQISWAP_GATE", 
		"SWAPZ1_GATE", "ISWAPTHETA_GATE", "CR_GATE", "TOFFOLI_GATE", "CP_GATE", 
		"DAGGER_KEY", "ENDDAGGER_KEY", "CONTROL_KEY", "ENDCONTROL_KEY", "QIF_KEY", 
		"ELSE_KEY", "ENDIF_KEY", "QWHILE_KEY", "ENDQWHILE_KEY", "MEASURE_KEY", 
		"RESET_KEY", "ASSIGN", "GT", "LT", "NOT", "EQ", "LEQ", "GEQ", "NE", "AND", 
		"OR", "PLUS", "MINUS", "MUL", "DIV", "COMMA", "LPAREN", "RPAREN", "LBRACK", 
		"RBRACK", "NEWLINE", "Identifier", "IdentifierNotDigit", "Digit", "Integer_Literal", 
		"Decimal_Literal", "DigitNotZero", "Double_Literal", "Decimal_Double_Literal", 
		"Digit_Sequence", "REALEXP", "WhiteSpace", "SingleLineComment", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'PI'", "'QINIT'", "'CREG'", "'q'", "'c'", "'BARRIER'", "'QGATE'", 
		"'ENDQGATE'", "'ECHO'", "'H'", "'X'", "'NOT'", "'T'", "'S'", "'Y'", "'Z'", 
		"'X1'", "'Y1'", "'Z1'", "'I'", "'U2'", "'RPhi'", "'U3'", "'U4'", "'RX'", 
		"'RY'", "'RZ'", "'U1'", "'CNOT'", "'CZ'", "'CU'", "'ISWAP'", "'SQISWAP'", 
		"'SWAP'", "'ISWAPTHETA'", "'CR'", "'TOFFOLI'", "'CP'", "'DAGGER'", "'ENDDAGGER'", 
		"'CONTROL'", "'ENDCONTROL'", "'QIF'", "'ELSE'", "'ENDQIF'", "'QWHILE'", 
		"'ENDQWHILE'", "'MEASURE'", "'RESET'", "'='", "'>'", "'<'", "'!'", "'=='", 
		"'<='", "'>='", "'!='", "'&&'", "'||'", "'+'", "'-'", "'*'", "'/'", "','", 
		"'('", "')'", "'['", "']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "PI", "QINIT_KEY", "CREG_KEY", "Q_KEY", "C_KEY", "BARRIER_KEY", 
		"QGATE_KEY", "ENDQGATE_KEY", "ECHO_GATE", "H_GATE", "X_GATE", "NOT_GATE", 
		"T_GATE", "S_GATE", "Y_GATE", "Z_GATE", "X1_GATE", "Y1_GATE", "Z1_GATE", 
		"I_GATE", "U2_GATE", "RPHI_GATE", "U3_GATE", "U4_GATE", "RX_GATE", "RY_GATE", 
		"RZ_GATE", "U1_GATE", "CNOT_GATE", "CZ_GATE", "CU_GATE", "ISWAP_GATE", 
		"SQISWAP_GATE", "SWAPZ1_GATE", "ISWAPTHETA_GATE", "CR_GATE", "TOFFOLI_GATE", 
		"CP_GATE", "DAGGER_KEY", "ENDDAGGER_KEY", "CONTROL_KEY", "ENDCONTROL_KEY", 
		"QIF_KEY", "ELSE_KEY", "ENDIF_KEY", "QWHILE_KEY", "ENDQWHILE_KEY", "MEASURE_KEY", 
		"RESET_KEY", "ASSIGN", "GT", "LT", "NOT", "EQ", "LEQ", "GEQ", "NE", "AND", 
		"OR", "PLUS", "MINUS", "MUL", "DIV", "COMMA", "LPAREN", "RPAREN", "LBRACK", 
		"RBRACK", "NEWLINE", "Identifier", "Integer_Literal", "Double_Literal", 
		"Digit_Sequence", "REALEXP", "WhiteSpace", "SingleLineComment", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TodoLangGrammarLexer._LITERAL_NAMES, TodoLangGrammarLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TodoLangGrammarLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TodoLangGrammarLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TodoLangGrammar.g4"; }

	// @Override
	public get ruleNames(): string[] { return TodoLangGrammarLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TodoLangGrammarLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TodoLangGrammarLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TodoLangGrammarLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02O\u021C\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x04K\tK\x04L\tL\x04M\tM\x04N\tN\x04" +
		"O\tO\x04P\tP\x04Q\tQ\x04R\tR\x04S\tS\x03\x02\x03\x02\x03\x02\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18" +
		"\x03\x18\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03" +
		"!\x03!\x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"" +
		"\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03" +
		"$\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03" +
		"\'\x03\'\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)" +
		"\x03)\x03)\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03" +
		"*\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03" +
		",\x03,\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03" +
		"/\x03/\x03/\x03/\x03/\x03/\x03/\x030\x030\x030\x030\x030\x030\x030\x03" +
		"0\x030\x030\x031\x031\x031\x031\x031\x031\x031\x031\x032\x032\x032\x03" +
		"2\x032\x032\x033\x033\x034\x034\x035\x035\x036\x036\x037\x037\x037\x03" +
		"8\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03;\x03;\x03<\x03<\x03" +
		"<\x03=\x03=\x03>\x03>\x03?\x03?\x03@\x03@\x03A\x03A\x03B\x03B\x03C\x03" +
		"C\x03D\x03D\x03E\x03E\x03F\x07F\u01C2\nF\fF\x0EF\u01C5\vF\x03F\x05F\u01C8" +
		"\nF\x03F\x03F\x03G\x03G\x03G\x07G\u01CF\nG\fG\x0EG\u01D2\vG\x03H\x03H" +
		"\x03I\x03I\x03J\x03J\x03K\x03K\x07K\u01DC\nK\fK\x0EK\u01DF\vK\x03K\x05" +
		"K\u01E2\nK\x03L\x03L\x03M\x03M\x03N\x05N\u01E9\nN\x03N\x03N\x03N\x03N" +
		"\x03N\x03N\x03N\x05N\u01F2\nN\x03O\x06O\u01F5\nO\rO\x0EO\u01F6\x03P\x06" +
		"P\u01FA\nP\rP\x0EP\u01FB\x03P\x03P\x05P\u0200\nP\x03P\x06P\u0203\nP\r" +
		"P\x0EP\u0204\x03Q\x03Q\x03Q\x03Q\x03R\x03R\x07R\u020D\nR\fR\x0ER\u0210" +
		"\vR\x03R\x05R\u0213\nR\x03R\x03R\x03R\x03R\x03S\x03S\x03S\x03S\x02\x02" +
		"\x02T\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b" +
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02" +
		"4g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02" +
		"@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02" +
		"H\x8F\x02\x02\x91\x02\x02\x93\x02I\x95\x02\x02\x97\x02\x02\x99\x02J\x9B" +
		"\x02\x02\x9D\x02K\x9F\x02L\xA1\x02M\xA3\x02N\xA5\x02O\x03\x02\t\x04\x02" +
		"\f\f\x0F\x0F\x05\x02C\\aac|\x03\x022;\x03\x023;\x04\x02GGgg\x04\x02--" +
		"//\x04\x02\v\v\"\"\x02\u0225\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02" +
		"\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02" +
		"\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03" +
		"\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02" +
		"\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02" +
		"}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02" +
		"\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02" +
		"\x89\x03\x02\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02" +
		"\x93\x03\x02\x02\x02\x02\x99\x03\x02\x02\x02\x02\x9D\x03\x02\x02\x02\x02" +
		"\x9F\x03\x02\x02\x02\x02\xA1\x03\x02\x02\x02\x02\xA3\x03\x02\x02\x02\x02" +
		"\xA5\x03\x02\x02\x02\x03\xA7\x03\x02\x02\x02\x05\xAA\x03\x02\x02\x02\x07" +
		"\xB0\x03\x02\x02\x02\t\xB5\x03\x02\x02\x02\v\xB7\x03\x02\x02\x02\r\xB9" +
		"\x03\x02\x02\x02\x0F\xC1\x03\x02\x02\x02\x11\xC7\x03\x02\x02\x02\x13\xD0" +
		"\x03\x02\x02\x02\x15\xD5\x03\x02\x02\x02\x17\xD7\x03\x02\x02\x02\x19\xD9" +
		"\x03\x02\x02\x02\x1B\xDD\x03\x02\x02\x02\x1D\xDF\x03\x02\x02\x02\x1F\xE1" +
		"\x03\x02\x02\x02!\xE3\x03\x02\x02\x02#\xE5\x03\x02\x02\x02%\xE8\x03\x02" +
		"\x02\x02\'\xEB\x03\x02\x02\x02)\xEE\x03\x02\x02\x02+\xF0\x03\x02\x02\x02" +
		"-\xF3\x03\x02\x02\x02/\xF8\x03\x02\x02\x021\xFB\x03\x02\x02\x023\xFE\x03" +
		"\x02\x02\x025\u0101\x03\x02\x02\x027\u0104\x03\x02\x02\x029\u0107\x03" +
		"\x02\x02\x02;\u010A\x03\x02\x02\x02=\u010F\x03\x02\x02\x02?\u0112\x03" +
		"\x02\x02\x02A\u0115\x03\x02\x02\x02C\u011B\x03\x02\x02\x02E\u0123\x03" +
		"\x02\x02\x02G\u0128\x03\x02\x02\x02I\u0133\x03\x02\x02\x02K\u0136\x03" +
		"\x02\x02\x02M\u013E\x03\x02\x02\x02O\u0141\x03\x02\x02\x02Q\u0148\x03" +
		"\x02\x02\x02S\u0152\x03\x02\x02\x02U\u015A\x03\x02\x02\x02W\u0165\x03" +
		"\x02\x02\x02Y\u0169\x03\x02\x02\x02[\u016E\x03\x02\x02\x02]\u0175\x03" +
		"\x02\x02\x02_\u017C\x03\x02\x02\x02a\u0186\x03\x02\x02\x02c\u018E\x03" +
		"\x02\x02\x02e\u0194\x03\x02\x02\x02g\u0196\x03\x02\x02\x02i\u0198\x03" +
		"\x02\x02\x02k\u019A\x03\x02\x02\x02m\u019C\x03\x02\x02\x02o\u019F\x03" +
		"\x02\x02\x02q\u01A2\x03\x02\x02\x02s\u01A5\x03\x02\x02\x02u\u01A8\x03" +
		"\x02\x02\x02w\u01AB\x03\x02\x02\x02y\u01AE\x03\x02\x02\x02{\u01B0\x03" +
		"\x02\x02\x02}\u01B2\x03\x02\x02\x02\x7F\u01B4\x03\x02\x02\x02\x81\u01B6" +
		"\x03\x02\x02\x02\x83\u01B8\x03\x02\x02\x02\x85\u01BA\x03\x02\x02\x02\x87" +
		"\u01BC\x03\x02\x02\x02\x89\u01BE\x03\x02\x02\x02\x8B\u01C3\x03\x02\x02" +
		"\x02\x8D\u01CB\x03\x02\x02\x02\x8F\u01D3\x03\x02\x02\x02\x91\u01D5\x03" +
		"\x02\x02\x02\x93\u01D7\x03\x02\x02\x02\x95\u01E1\x03\x02\x02\x02\x97\u01E3" +
		"\x03\x02\x02\x02\x99\u01E5\x03\x02\x02\x02\x9B\u01F1\x03\x02\x02\x02\x9D" +
		"\u01F4\x03\x02\x02\x02\x9F\u01F9\x03\x02\x02\x02\xA1\u0206\x03\x02\x02" +
		"\x02\xA3\u020A\x03\x02\x02\x02\xA5\u0218\x03\x02\x02\x02\xA7\xA8\x07R" +
		"\x02\x02\xA8\xA9\x07K\x02\x02\xA9\x04\x03\x02\x02\x02\xAA\xAB\x07S\x02" +
		"\x02\xAB\xAC\x07K\x02\x02\xAC\xAD\x07P\x02\x02\xAD\xAE\x07K\x02\x02\xAE" +
		"\xAF\x07V\x02\x02\xAF\x06\x03\x02\x02\x02\xB0\xB1\x07E\x02\x02\xB1\xB2" +
		"\x07T\x02\x02\xB2\xB3\x07G\x02\x02\xB3\xB4\x07I\x02\x02\xB4\b\x03\x02" +
		"\x02\x02\xB5\xB6\x07s\x02\x02\xB6\n\x03\x02\x02\x02\xB7\xB8\x07e\x02\x02" +
		"\xB8\f\x03\x02\x02\x02\xB9\xBA\x07D\x02\x02\xBA\xBB\x07C\x02\x02\xBB\xBC" +
		"\x07T\x02\x02\xBC\xBD\x07T\x02\x02\xBD\xBE\x07K\x02\x02\xBE\xBF\x07G\x02" +
		"\x02\xBF\xC0\x07T\x02\x02\xC0\x0E\x03\x02\x02\x02\xC1\xC2\x07S\x02\x02" +
		"\xC2\xC3\x07I\x02\x02\xC3\xC4\x07C\x02\x02\xC4\xC5\x07V\x02\x02\xC5\xC6" +
		"\x07G\x02\x02\xC6\x10\x03\x02\x02\x02\xC7\xC8\x07G\x02\x02\xC8\xC9\x07" +
		"P\x02\x02\xC9\xCA\x07F\x02\x02\xCA\xCB\x07S\x02\x02\xCB\xCC\x07I\x02\x02" +
		"\xCC\xCD\x07C\x02\x02\xCD\xCE\x07V\x02\x02\xCE\xCF\x07G\x02\x02\xCF\x12" +
		"\x03\x02\x02\x02\xD0\xD1\x07G\x02\x02\xD1\xD2\x07E\x02\x02\xD2\xD3\x07" +
		"J\x02\x02\xD3\xD4\x07Q\x02\x02\xD4\x14\x03\x02\x02\x02\xD5\xD6\x07J\x02" +
		"\x02\xD6\x16\x03\x02\x02\x02\xD7\xD8\x07Z\x02\x02\xD8\x18\x03\x02\x02" +
		"\x02\xD9\xDA\x07P\x02\x02\xDA\xDB\x07Q\x02\x02\xDB\xDC\x07V\x02\x02\xDC" +
		"\x1A\x03\x02\x02\x02\xDD\xDE\x07V\x02\x02\xDE\x1C\x03\x02\x02\x02\xDF" +
		"\xE0\x07U\x02\x02\xE0\x1E\x03\x02\x02\x02\xE1\xE2\x07[\x02\x02\xE2 \x03" +
		"\x02\x02\x02\xE3\xE4\x07\\\x02\x02\xE4\"\x03\x02\x02\x02\xE5\xE6\x07Z" +
		"\x02\x02\xE6\xE7\x073\x02\x02\xE7$\x03\x02\x02\x02\xE8\xE9\x07[\x02\x02" +
		"\xE9\xEA\x073\x02\x02\xEA&\x03\x02\x02\x02\xEB\xEC\x07\\\x02\x02\xEC\xED" +
		"\x073\x02\x02\xED(\x03\x02\x02\x02\xEE\xEF\x07K\x02\x02\xEF*\x03\x02\x02" +
		"\x02\xF0\xF1\x07W\x02\x02\xF1\xF2\x074\x02\x02\xF2,\x03\x02\x02\x02\xF3" +
		"\xF4\x07T\x02\x02\xF4\xF5\x07R\x02\x02\xF5\xF6\x07j\x02\x02\xF6\xF7\x07" +
		"k\x02\x02\xF7.\x03\x02\x02\x02\xF8\xF9\x07W\x02\x02\xF9\xFA\x075\x02\x02" +
		"\xFA0\x03\x02\x02\x02\xFB\xFC\x07W\x02\x02\xFC\xFD\x076\x02\x02\xFD2\x03" +
		"\x02\x02\x02\xFE\xFF\x07T\x02\x02\xFF\u0100\x07Z\x02\x02\u01004\x03\x02" +
		"\x02\x02\u0101\u0102\x07T\x02\x02\u0102\u0103\x07[\x02\x02\u01036\x03" +
		"\x02\x02\x02\u0104\u0105\x07T\x02\x02\u0105\u0106\x07\\\x02\x02\u0106" +
		"8\x03\x02\x02\x02\u0107\u0108\x07W\x02\x02\u0108\u0109\x073\x02\x02\u0109" +
		":\x03\x02\x02\x02\u010A\u010B\x07E\x02\x02\u010B\u010C\x07P\x02\x02\u010C" +
		"\u010D\x07Q\x02\x02\u010D\u010E\x07V\x02\x02\u010E<\x03\x02\x02\x02\u010F" +
		"\u0110\x07E\x02\x02\u0110\u0111\x07\\\x02\x02\u0111>\x03\x02\x02\x02\u0112" +
		"\u0113\x07E\x02\x02\u0113\u0114\x07W\x02\x02\u0114@\x03\x02\x02\x02\u0115" +
		"\u0116\x07K\x02\x02\u0116\u0117\x07U\x02\x02\u0117\u0118\x07Y\x02\x02" +
		"\u0118\u0119\x07C\x02\x02\u0119\u011A\x07R\x02\x02\u011AB\x03\x02\x02" +
		"\x02\u011B\u011C\x07U\x02\x02\u011C\u011D\x07S\x02\x02\u011D\u011E\x07" +
		"K\x02\x02\u011E\u011F\x07U\x02\x02\u011F\u0120\x07Y\x02\x02\u0120\u0121" +
		"\x07C\x02\x02\u0121\u0122\x07R\x02\x02\u0122D\x03\x02\x02\x02\u0123\u0124" +
		"\x07U\x02\x02\u0124\u0125\x07Y\x02\x02\u0125\u0126\x07C\x02\x02\u0126" +
		"\u0127\x07R\x02\x02\u0127F\x03\x02\x02\x02\u0128\u0129\x07K\x02\x02\u0129" +
		"\u012A\x07U\x02\x02\u012A\u012B\x07Y\x02\x02\u012B\u012C\x07C\x02\x02" +
		"\u012C\u012D\x07R\x02\x02\u012D\u012E\x07V\x02\x02\u012E\u012F\x07J\x02" +
		"\x02\u012F\u0130\x07G\x02\x02\u0130\u0131\x07V\x02\x02\u0131\u0132\x07" +
		"C\x02\x02\u0132H\x03\x02\x02\x02\u0133\u0134\x07E\x02\x02\u0134\u0135" +
		"\x07T\x02\x02\u0135J\x03\x02\x02\x02\u0136\u0137\x07V\x02\x02\u0137\u0138" +
		"\x07Q\x02\x02\u0138\u0139\x07H\x02\x02\u0139\u013A\x07H\x02\x02\u013A" +
		"\u013B\x07Q\x02\x02\u013B\u013C\x07N\x02\x02\u013C\u013D\x07K\x02\x02" +
		"\u013DL\x03\x02\x02\x02\u013E\u013F\x07E\x02\x02\u013F\u0140\x07R\x02" +
		"\x02\u0140N\x03\x02\x02\x02\u0141\u0142\x07F\x02\x02\u0142\u0143\x07C" +
		"\x02\x02\u0143\u0144\x07I\x02\x02\u0144\u0145\x07I\x02\x02\u0145\u0146" +
		"\x07G\x02\x02\u0146\u0147\x07T\x02\x02\u0147P\x03\x02\x02\x02\u0148\u0149" +
		"\x07G\x02\x02\u0149\u014A\x07P\x02\x02\u014A\u014B\x07F\x02\x02\u014B" +
		"\u014C\x07F\x02\x02\u014C\u014D\x07C\x02\x02\u014D\u014E\x07I\x02\x02" +
		"\u014E\u014F\x07I\x02\x02\u014F\u0150\x07G\x02\x02\u0150\u0151\x07T\x02" +
		"\x02\u0151R\x03\x02\x02\x02\u0152\u0153\x07E\x02\x02\u0153\u0154\x07Q" +
		"\x02\x02\u0154\u0155\x07P\x02\x02\u0155\u0156\x07V\x02\x02\u0156\u0157" +
		"\x07T\x02\x02\u0157\u0158\x07Q\x02\x02\u0158\u0159\x07N\x02\x02\u0159" +
		"T\x03\x02\x02\x02\u015A\u015B\x07G\x02\x02\u015B\u015C\x07P\x02\x02\u015C" +
		"\u015D\x07F\x02\x02\u015D\u015E\x07E\x02\x02\u015E\u015F\x07Q\x02\x02" +
		"\u015F\u0160\x07P\x02\x02\u0160\u0161\x07V\x02\x02\u0161\u0162\x07T\x02" +
		"\x02\u0162\u0163\x07Q\x02\x02\u0163\u0164\x07N\x02\x02\u0164V\x03\x02" +
		"\x02\x02\u0165\u0166\x07S\x02\x02\u0166\u0167\x07K\x02\x02\u0167\u0168" +
		"\x07H\x02\x02\u0168X\x03\x02\x02\x02\u0169\u016A\x07G\x02\x02\u016A\u016B" +
		"\x07N\x02\x02\u016B\u016C\x07U\x02\x02\u016C\u016D\x07G\x02\x02\u016D" +
		"Z\x03\x02\x02\x02\u016E\u016F\x07G\x02\x02\u016F\u0170\x07P\x02\x02\u0170" +
		"\u0171\x07F\x02\x02\u0171\u0172\x07S\x02\x02\u0172\u0173\x07K\x02\x02" +
		"\u0173\u0174\x07H\x02\x02\u0174\\\x03\x02\x02\x02\u0175\u0176\x07S\x02" +
		"\x02\u0176\u0177\x07Y\x02\x02\u0177\u0178\x07J\x02\x02\u0178\u0179\x07" +
		"K\x02\x02\u0179\u017A\x07N\x02\x02\u017A\u017B\x07G\x02\x02\u017B^\x03" +
		"\x02\x02\x02\u017C\u017D\x07G\x02\x02\u017D\u017E\x07P\x02\x02\u017E\u017F" +
		"\x07F\x02\x02\u017F\u0180\x07S\x02\x02\u0180\u0181\x07Y\x02\x02\u0181" +
		"\u0182\x07J\x02\x02\u0182\u0183\x07K\x02\x02\u0183\u0184\x07N\x02\x02" +
		"\u0184\u0185\x07G\x02\x02\u0185`\x03\x02\x02\x02\u0186\u0187\x07O\x02" +
		"\x02\u0187\u0188\x07G\x02\x02\u0188\u0189\x07C\x02\x02\u0189\u018A\x07" +
		"U\x02\x02\u018A\u018B\x07W\x02\x02\u018B\u018C\x07T\x02\x02\u018C\u018D" +
		"\x07G\x02\x02\u018Db\x03\x02\x02\x02\u018E\u018F\x07T\x02\x02\u018F\u0190" +
		"\x07G\x02\x02\u0190\u0191\x07U\x02\x02\u0191\u0192\x07G\x02\x02\u0192" +
		"\u0193\x07V\x02\x02\u0193d\x03\x02\x02\x02\u0194\u0195\x07?\x02\x02\u0195" +
		"f\x03\x02\x02\x02\u0196\u0197\x07@\x02\x02\u0197h\x03\x02\x02\x02\u0198" +
		"\u0199\x07>\x02\x02\u0199j\x03\x02\x02\x02\u019A\u019B\x07#\x02\x02\u019B" +
		"l\x03\x02\x02\x02\u019C\u019D\x07?\x02\x02\u019D\u019E\x07?\x02\x02\u019E" +
		"n\x03\x02\x02\x02\u019F\u01A0\x07>\x02\x02\u01A0\u01A1\x07?\x02\x02\u01A1" +
		"p\x03\x02\x02\x02\u01A2\u01A3\x07@\x02\x02\u01A3\u01A4\x07?\x02\x02\u01A4" +
		"r\x03\x02\x02\x02\u01A5\u01A6\x07#\x02\x02\u01A6\u01A7\x07?\x02\x02\u01A7" +
		"t\x03\x02\x02\x02\u01A8\u01A9\x07(\x02\x02\u01A9\u01AA\x07(\x02\x02\u01AA" +
		"v\x03\x02\x02\x02\u01AB\u01AC\x07~\x02\x02\u01AC\u01AD\x07~\x02\x02\u01AD" +
		"x\x03\x02\x02\x02\u01AE\u01AF\x07-\x02\x02\u01AFz\x03\x02\x02\x02\u01B0" +
		"\u01B1\x07/\x02\x02\u01B1|\x03\x02\x02\x02\u01B2\u01B3\x07,\x02\x02\u01B3" +
		"~\x03\x02\x02\x02\u01B4\u01B5\x071\x02\x02\u01B5\x80\x03\x02\x02\x02\u01B6" +
		"\u01B7\x07.\x02\x02\u01B7\x82\x03\x02\x02\x02\u01B8\u01B9\x07*\x02\x02" +
		"\u01B9\x84\x03\x02\x02\x02\u01BA\u01BB\x07+\x02\x02\u01BB\x86\x03\x02" +
		"\x02\x02\u01BC\u01BD\x07]\x02\x02\u01BD\x88\x03\x02\x02\x02\u01BE\u01BF" +
		"\x07_\x02\x02\u01BF\x8A\x03\x02\x02\x02\u01C0\u01C2\t\x02\x02\x02\u01C1" +
		"\u01C0\x03\x02\x02\x02\u01C2\u01C5\x03\x02\x02\x02\u01C3\u01C1\x03\x02" +
		"\x02\x02\u01C3\u01C4\x03\x02\x02\x02\u01C4\u01C7\x03\x02\x02\x02\u01C5" +
		"\u01C3\x03\x02\x02\x02\u01C6\u01C8\x07\x0F\x02\x02\u01C7\u01C6\x03\x02" +
		"\x02\x02\u01C7\u01C8\x03\x02\x02\x02\u01C8\u01C9\x03\x02\x02\x02\u01C9" +
		"\u01CA\x07\f\x02\x02\u01CA\x8C\x03\x02\x02\x02\u01CB\u01D0\x05\x8FH\x02" +
		"\u01CC\u01CF\x05\x8FH\x02\u01CD\u01CF\x05\x91I\x02\u01CE\u01CC\x03\x02" +
		"\x02\x02\u01CE\u01CD\x03\x02\x02\x02\u01CF\u01D2\x03\x02\x02\x02\u01D0" +
		"\u01CE\x03\x02\x02\x02\u01D0\u01D1\x03\x02\x02\x02\u01D1\x8E\x03\x02\x02" +
		"\x02\u01D2\u01D0\x03\x02\x02\x02\u01D3\u01D4\t\x03\x02\x02\u01D4\x90\x03" +
		"\x02\x02\x02\u01D5\u01D6\t\x04\x02\x02\u01D6\x92\x03\x02\x02\x02\u01D7" +
		"\u01D8\x05\x95K\x02\u01D8\x94\x03\x02\x02\x02\u01D9\u01DD\x05\x97L\x02" +
		"\u01DA\u01DC\x05\x91I\x02\u01DB\u01DA\x03\x02\x02\x02\u01DC\u01DF\x03" +
		"\x02\x02\x02\u01DD\u01DB\x03\x02\x02\x02\u01DD\u01DE\x03\x02\x02\x02\u01DE" +
		"\u01E2\x03\x02\x02\x02\u01DF\u01DD\x03\x02\x02\x02\u01E0\u01E2\x05\x91" +
		"I\x02\u01E1\u01D9\x03\x02\x02\x02\u01E1\u01E0\x03\x02\x02\x02\u01E2\x96" +
		"\x03\x02\x02\x02\u01E3\u01E4\t\x05\x02\x02\u01E4\x98\x03\x02\x02\x02\u01E5" +
		"\u01E6\x05\x9BN\x02\u01E6\x9A\x03\x02\x02\x02\u01E7\u01E9\x05\x9DO\x02" +
		"\u01E8\u01E7\x03\x02\x02\x02\u01E8\u01E9\x03\x02\x02\x02\u01E9\u01EA\x03" +
		"\x02\x02\x02\u01EA\u01EB\x070\x02\x02\u01EB\u01F2\x05\x9DO\x02\u01EC\u01ED" +
		"\x05\x9DO\x02\u01ED\u01EE\x070\x02\x02\u01EE\u01EF\x05\x9FP\x02\u01EF" +
		"\u01F2\x03\x02\x02\x02\u01F0\u01F2\x05\x9FP\x02\u01F1\u01E8\x03\x02\x02" +
		"\x02\u01F1\u01EC\x03\x02\x02\x02\u01F1\u01F0\x03\x02\x02\x02\u01F2\x9C" +
		"\x03\x02\x02\x02\u01F3\u01F5\x05\x91I\x02\u01F4\u01F3\x03\x02\x02\x02" +
		"\u01F5\u01F6\x03\x02\x02\x02\u01F6\u01F4\x03\x02\x02\x02\u01F6\u01F7\x03" +
		"\x02\x02\x02\u01F7\x9E\x03\x02\x02\x02\u01F8\u01FA\t\x04\x02\x02\u01F9" +
		"\u01F8\x03\x02\x02\x02\u01FA\u01FB\x03\x02\x02\x02\u01FB\u01F9\x03\x02" +
		"\x02\x02\u01FB\u01FC\x03\x02\x02\x02\u01FC\u01FD\x03\x02\x02\x02\u01FD" +
		"\u01FF\t\x06\x02\x02\u01FE\u0200\t\x07\x02\x02\u01FF\u01FE\x03\x02\x02" +
		"\x02\u01FF\u0200\x03\x02\x02\x02\u0200\u0202\x03\x02\x02\x02\u0201\u0203" +
		"\t\x04\x02\x02\u0202\u0201\x03\x02\x02\x02\u0203\u0204\x03\x02\x02\x02" +
		"\u0204\u0202\x03\x02\x02\x02\u0204\u0205\x03\x02\x02\x02\u0205\xA0\x03" +
		"\x02\x02\x02\u0206\u0207\t\b\x02\x02\u0207\u0208\x03\x02\x02\x02\u0208" +
		"\u0209\bQ\x02\x02\u0209\xA2\x03\x02\x02\x02\u020A\u020E\x07%\x02\x02\u020B" +
		"\u020D\n\x02\x02\x02\u020C\u020B\x03\x02\x02\x02\u020D\u0210\x03\x02\x02" +
		"\x02\u020E\u020C\x03\x02\x02\x02\u020E\u020F\x03\x02\x02\x02\u020F\u0212" +
		"\x03\x02\x02\x02\u0210\u020E\x03\x02\x02\x02\u0211\u0213\x07\x0F\x02\x02" +
		"\u0212\u0211\x03\x02\x02\x02\u0212\u0213\x03\x02\x02\x02\u0213\u0214\x03" +
		"\x02\x02\x02\u0214\u0215\x07\f\x02\x02\u0215\u0216\x03\x02\x02\x02\u0216" +
		"\u0217\bR\x02\x02\u0217\xA4\x03\x02\x02\x02\u0218\u0219\t\b\x02\x02\u0219" +
		"\u021A\x03\x02\x02\x02\u021A\u021B\bS\x02\x02\u021B\xA6\x03\x02\x02\x02" +
		"\x11\x02\u01C3\u01C7\u01CE\u01D0\u01DD\u01E1\u01E8\u01F1\u01F6\u01FB\u01FF" +
		"\u0204\u020E\u0212\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TodoLangGrammarLexer.__ATN) {
			TodoLangGrammarLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TodoLangGrammarLexer._serializedATN));
		}

		return TodoLangGrammarLexer.__ATN;
	}

}

